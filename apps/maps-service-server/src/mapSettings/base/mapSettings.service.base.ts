/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MapSettings as PrismaMapSettings } from "@prisma/client";

export class MapSettingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MapSettingsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.mapSettings.count(args);
  }

  async mapSettingsItems<T extends Prisma.MapSettingsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MapSettingsFindManyArgs>
  ): Promise<PrismaMapSettings[]> {
    return this.prisma.mapSettings.findMany<Prisma.MapSettingsFindManyArgs>(
      args
    );
  }
  async mapSettings<T extends Prisma.MapSettingsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MapSettingsFindUniqueArgs>
  ): Promise<PrismaMapSettings | null> {
    return this.prisma.mapSettings.findUnique(args);
  }
  async createMapSettings<T extends Prisma.MapSettingsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MapSettingsCreateArgs>
  ): Promise<PrismaMapSettings> {
    return this.prisma.mapSettings.create<T>(args);
  }
  async updateMapSettings<T extends Prisma.MapSettingsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MapSettingsUpdateArgs>
  ): Promise<PrismaMapSettings> {
    return this.prisma.mapSettings.update<T>(args);
  }
  async deleteMapSettings<T extends Prisma.MapSettingsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MapSettingsDeleteArgs>
  ): Promise<PrismaMapSettings> {
    return this.prisma.mapSettings.delete(args);
  }
}
